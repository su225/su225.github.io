<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech notes</title><link>https://su225.github.io/</link><description>Recent content on Tech notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Aug 2022 10:48:17 +0530</lastBuildDate><atom:link href="https://su225.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning Lifetime parameters in Rust: Writing a simple Lisp evaluator</title><link>https://su225.github.io/posts/learning-rust-writing-lisp-evaluator/</link><pubDate>Wed, 24 Aug 2022 10:48:17 +0530</pubDate><guid>https://su225.github.io/posts/learning-rust-writing-lisp-evaluator/</guid><description>Link to the problem description
Brief description - We are given a valid Lisp expression. The expression types are
Integer: An integer which evaluates to the same value (positive or negative) Let: Used to introduce new variables into the scope Add: (add e1 e2) where e1 and e2 expressions evaluate to integers. It evaluates to the sum of the two Mult: (mult e1 e2) where e1 and e2 expressions evaluate to integers.</description></item><item><title>[Leetcode] Populating the next right pointers in each node</title><link>https://su225.github.io/posts/leetcode-populating-next-right-pointers-in-each-node/</link><pubDate>Wed, 29 Dec 2021 10:48:17 +0530</pubDate><guid>https://su225.github.io/posts/leetcode-populating-next-right-pointers-in-each-node/</guid><description>Link to the problem
Brief description - We are given a perfect binary tree. The task is to link each node with its right one in the same level by filling next pointer. In the end, traversing next pointer from the leftmost node in the level should allow us to traverse through the entire level
I solved it with two approaches. Both O(n) time-complexity and one of them with constant space.</description></item><item><title>About me</title><link>https://su225.github.io/about/</link><pubDate>Sat, 18 Dec 2021 11:00:17 +0530</pubDate><guid>https://su225.github.io/about/</guid><description>Hello, my name is Suchith J N. I am a software engineer. I currently live in India. This is my personal blog. I write about computer science and software engineering topics here. Opinions here are my own and not that of my employers - past, present or future.</description></item><item><title>Supporting HTTP/3 at the ingress gateway in Istio</title><link>https://su225.github.io/posts/http3-support-in-istio-gateway/</link><pubDate>Sat, 23 Oct 2021 20:00:17 +0530</pubDate><guid>https://su225.github.io/posts/http3-support-in-istio-gateway/</guid><description>&lt;p>A few months ago I contributed experimental HTTP/3 support at the Istio ingress gateway
(&lt;a href="https://github.com/istio/istio/pull/33817">PR&lt;/a>). For the HTTPS gateway
servers which terminate the TLS at the gateway, it automatically adds a mirror HTTP/3
listener over QUIC provided that there is an open UDP port. If there is an HTTPS server
on TCP port 443, then an HTTP/3 server is automatically created on UDP port 443 as
illustrated in the diagram below. &lt;strong>All you need to do is to flip a switch on pilot and
open UDP ports&lt;/strong>.&lt;/p></description></item></channel></rss>