<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leetcode on Tech notes</title><link>https://su225.github.io/tags/leetcode/</link><description>Recent content in leetcode on Tech notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Aug 2022 10:48:17 +0530</lastBuildDate><atom:link href="https://su225.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning Lifetime parameters in Rust: Writing a simple Lisp evaluator</title><link>https://su225.github.io/posts/learning-rust-writing-lisp-evaluator/</link><pubDate>Wed, 24 Aug 2022 10:48:17 +0530</pubDate><guid>https://su225.github.io/posts/learning-rust-writing-lisp-evaluator/</guid><description>Link to the problem description
Brief description - We are given a valid Lisp expression. The expression types are
Integer: An integer which evaluates to the same value (positive or negative) Let: Used to introduce new variables into the scope Add: (add e1 e2) where e1 and e2 expressions evaluate to integers. It evaluates to the sum of the two Mult: (mult e1 e2) where e1 and e2 expressions evaluate to integers.</description></item><item><title>[Leetcode] Populating the next right pointers in each node</title><link>https://su225.github.io/posts/leetcode-populating-next-right-pointers-in-each-node/</link><pubDate>Wed, 29 Dec 2021 10:48:17 +0530</pubDate><guid>https://su225.github.io/posts/leetcode-populating-next-right-pointers-in-each-node/</guid><description>Link to the problem
Brief description - We are given a perfect binary tree. The task is to link each node with its right one in the same level by filling next pointer. In the end, traversing next pointer from the leftmost node in the level should allow us to traverse through the entire level
I solved it with two approaches. Both O(n) time-complexity and one of them with constant space.</description></item></channel></rss>